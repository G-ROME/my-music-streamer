{"version":3,"sources":["components/Body.js","App.js","index.js"],"names":["Body","useState","queryString","setQueryString","apiUrl","process","sauce","setSauce","url","bg","setBg","loading","data","error","music","setMusic","play","setPlay","faPlay","playIcon","setPlayICon","selectedTrack","setSelectedTrack","bottomPreview","setBottomPreview","playList","setPlaylist","useEffect","axios","get","then","response","catch","message","content","className","playListContainer","map","key","onLoad","snippet","title","id","videoId","checkAndSetBg","maxResults","onClick","changeMusic","src","thumbnails","default","alt","trackKey","vidId","image","Image","onload","this","width","style","backgroundImage","type","placeholder","document","getElementById","addEventListener","event","keyCode","value","icon","faSearch","faBackward","faForward","onStart","onError","onPlay","faPause","onPause","controls","playing","loop","App","ReactDOM","render","StrictMode"],"mappings":"4TAoMeA,MA3Lf,WAEI,IAFY,EAI8BC,mBAAS,cAJvC,mBAIDC,EAJC,KAIYC,EAJZ,KAUNC,EARM,wCAGA,0CAFW,GAEX,8BACuDF,EADvD,uCAIUG,0CATV,EAYcJ,mBAAS,MAZvB,mBAYLK,EAZK,KAYEC,EAZF,KAaRC,EAAG,0CAAsCF,GAbjC,EAeQL,mBAAS,MAfjB,mBAeLQ,EAfK,KAeDC,EAfC,OAiBcT,mBAAS,CAACU,SAAS,EAAOC,KAAM,KAAMC,OAAM,IAjB1D,mBAiBLC,EAjBK,KAiBEC,EAjBF,OAmBYd,oBAAS,GAnBrB,mBAmBLe,EAnBK,KAmBCC,EAnBD,OAoBoBhB,mBAASiB,KApB7B,mBAoBLC,EApBK,KAoBKC,EApBL,OAsB8BnB,mBAAS,MAtBvC,mBAsBLoB,EAtBK,KAsBUC,EAtBV,OAwB8BrB,mBAAS,kBAxBvC,mBAwBLsB,EAxBK,KAwBUC,EAxBV,OA0BoBvB,mBAAS,IA1B7B,mBA0BLwB,EA1BK,KA0BKC,EA1BL,KA6BZC,qBAAU,WACNZ,EAAS,CACLJ,SAAQ,EACRC,KAAM,KACNC,OAAM,IAEVe,IAAMC,IAAIzB,GACL0B,MAAK,SAACC,GACHhB,EAAS,CACLJ,SAAS,EACTC,KAAMmB,EAASnB,KAAT,MACNC,OAAM,OAGbmB,OAAM,SAAAnB,GACHE,EAAS,CACLJ,SAAS,EACTC,KAAM,KACNC,MAAMA,EAAMoB,eAGzB,CAAC7B,IAEJ,IAAI8B,EACA,yBAAKC,UAAY,mBACb,yBAAKA,UAAU,YAGvB,GAAGrB,EAAMF,KAAK,CACV,IAAIwB,EAAoB,GACxBF,EACApB,EAAMF,KAAKyB,KAAI,SAACvB,EAAOwB,GAAR,OACf,yBAAKH,UAAU,cACPG,IAAOA,EACPC,OAAU,WACFH,EAAkBE,GAAO,CACrB,MAASxB,EAAM0B,QAAQC,MACvB,GAAM3B,EAAM4B,GAAGC,SAER,IAARL,GAAchC,GACbsC,EAAc9B,EAAM4B,GAAGC,SAEhBE,KAARP,GACCZ,EAAYU,IAI5BU,QAAW,WACHC,EAAYT,KAMpB,yBAAKU,IAAKlC,EAAM0B,QAAQS,WAAWC,QAAQ1C,IAAK2C,IAAI,UACpD,2BAAIrC,EAAM0B,QAAQC,WAK1B,SAASM,EAAYK,GACd3B,EAAS2B,KACR9B,EAAiB,CACb,IAAM8B,EACN,MAAS3B,EAAS2B,GAAUX,QAEhClC,EAASkB,EAAS2B,GAAUV,IAC5BE,EAAcnB,EAAS2B,GAAUV,IACjClB,EAAiB,yBAAKW,UAAY,QAAQ,aAAeV,EAAS2B,GAAUX,MAAO,yBAAKN,UAAU,iBAClGlB,GAAQ,IAIhB,SAAS2B,EAAcS,GACnB,IAAIC,EAAQ,IAAIC,MAChBD,EAAMN,IAAN,gCAAqCK,EAArC,sBACAC,EAAME,OAAS,WACRC,KAAKC,MAAO,IACXhD,EAAM+C,KAAKT,KAEXtC,EAAM,0BAAD,OAA2B2C,EAA3B,oBAgBjB,OAXGvC,EAAMD,QACLqB,EAAU,yBAAKC,UAAY,mBACtBrB,EAAMD,MACNC,EAAMF,KACP,0JAQJ,0BAAM+C,MAAO,CAACC,gBAAgB,OAAD,OAASnD,EAAT,OACzB,yBAAK0B,UAAY,aACb,yBAAKA,UAAU,aACVD,GAEL,yBAAKC,UAAY,aACb,2BACIO,GAAK,cACLmB,KAAO,OACPC,YAAe5D,EACf4C,QAAW,WACHiB,SAASC,eAAe,eAAeC,iBAAiB,SAAS,SAASC,GACjD,KAAlBA,EAAMC,SACLhE,EAAesD,KAAKW,aAMxC,kBAAC,IAAD,CACIjC,UAAY,aACZkC,KAAQC,IACRxB,QAAW,kBAAM3C,EAAe4D,SAASC,eAAe,eAAeI,YAInF,yBAAKjC,UAAY,cACb,yBAAKA,UAAY,cACZZ,GAEL,yBAAKY,UAAY,cACb,kBAAC,IAAD,CACIkC,KAASE,IACTzB,QAAW,kBAAMxC,GAA4B,IAApBe,EAAciB,IAAUS,EAAY1B,EAAciB,IAAI,GAAY,QAE/F,kBAAC,IAAD,CACIH,UAAY,YACZkC,KAASlD,EACT2B,QAAW,kBAAM7B,EAASX,GAASU,EAAOA,MAE9C,kBAAC,IAAD,CACIqD,KAASG,IACT1B,QAAW,kBAAMxC,GAA4BuC,KAApBxB,EAAciB,IAAqBS,EAAY1B,EAAciB,IAAI,GAAY,UAIlH,kBAAC,IAAD,CACIH,UAAY,cACZsC,QAAW,kBAAMjD,EAAiB,gBAAgBH,EAAcoB,QAChEiC,QAAW,kBAAMlD,EAAiB,iDAClCmD,OAAU,kBAAMvD,EAAYwD,MAC5BC,QAAW,kBAAMzD,EAAYF,MAC7B4D,UAAY,EACZtE,IAAOA,EACPuE,QAAW/D,EACXgE,MAAQ,MCjLTC,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCHNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFrB,SAASC,eAAe,W","file":"static/js/main.be4447b4.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faSearch, faPause, faForward, faBackward } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ReactPlayer from 'react-player/youtube';\r\n\r\n\r\nfunction Body() {\r\n    //https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&order=relevance&q=nightcore&type=video&videoCategoryId=10&key=(your key here)\r\n    const api = 'https://www.googleapis.com/youtube/v3';\r\n        const maxResults = 12;\r\n        const [queryString, setQueryString] = useState('aviencloud');\r\n    const params =\r\n    `/search?part=snippet&maxResults=${maxResults}&order=relevance&q=${queryString}&type=video&videoCategoryId=10&key=`;\r\n    const API_KEY= process.env.REACT_APP_API_KEY;\r\n    const API_KEY_test= process.env.REACT_APP_API_KEY_test;\r\n    const API_KEY_test01= process.env.REACT_APP_API_KEY_test01;\r\n    const apiUrl = api + params + API_KEY_test01;\r\n\r\n    const [sauce, setSauce] = useState(null);\r\n    let url = `https://www.youtube.com/watch?v=${sauce}`;\r\n\r\n    const [bg, setBg] = useState(null);\r\n\r\n    const [music, setMusic] = useState({loading: false, data: null, error:false});\r\n\r\n    const [play, setPlay] = useState(false);\r\n    const [playIcon, setPlayICon] = useState(faPlay);\r\n\r\n    const [selectedTrack, setSelectedTrack] = useState(null);\r\n\r\n    const [bottomPreview, setBottomPreview] = useState('select a track');\r\n\r\n    const [playList, setPlaylist] = useState([]);\r\n    \r\n\r\n    useEffect(() => {\r\n        setMusic({\r\n            loading:true,\r\n            data: null,\r\n            error:false\r\n        });\r\n        axios.get(apiUrl)\r\n            .then((response) => {\r\n                setMusic({\r\n                    loading: false,\r\n                    data: response.data['items'],\r\n                    error:false\r\n                });\r\n            })  \r\n            .catch(error =>{\r\n                setMusic({\r\n                    loading: false,\r\n                    data: null,\r\n                    error:error.message\r\n                })\r\n            });\r\n    }, [apiUrl]);\r\n\r\n    let content = \r\n        <div className = 'loaderContainer'>\r\n            <div className='loader'/>\r\n        </div>\r\n\r\n    if(music.data){\r\n        let playListContainer = [];\r\n        content = \r\n        music.data.map((music, key) => \r\n        <div className=\"channelCard\" \r\n                key = {key}\r\n                onLoad = {() => {\r\n                        playListContainer[key] = {\r\n                            'title': music.snippet.title,\r\n                            'id': music.id.videoId,\r\n                        }\r\n                        if(key === 0 && !sauce){\r\n                            checkAndSetBg(music.id.videoId);\r\n                        }\r\n                        if(key === maxResults-1){\r\n                            setPlaylist(playListContainer);\r\n                        }\r\n                    }\r\n                }\r\n            onClick = {() => {\r\n                    changeMusic(key);\r\n                }\r\n            }\r\n        >\r\n            {/* //TODO --change this part to conserve quota -- update I have no idea how\r\n            //I'll get back to it */}\r\n            <img src={music.snippet.thumbnails.default.url} alt='[img]'></img>\r\n            <p>{music.snippet.title}</p>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    function changeMusic(trackKey){\r\n        if(playList[trackKey]){\r\n            setSelectedTrack({\r\n                'key':trackKey,\r\n                'title': playList[trackKey].title,\r\n            });\r\n            setSauce(playList[trackKey].id);\r\n            checkAndSetBg(playList[trackKey].id);\r\n            setBottomPreview(<div className = 'flex'>{'Fetching: ' + playList[trackKey].title }<div className='miniLoader'/></div>);\r\n            setPlay(true);\r\n        }\r\n    }\r\n\r\n    function checkAndSetBg(vidId){\r\n        let image = new Image();\r\n        image.src = `http://i.ytimg.com/vi/${vidId}/maxresdefault.jpg`;\r\n        image.onload = function(){\r\n            if(this.width >120){\r\n                setBg(this.src);\r\n            }else{\r\n                setBg(`https://i.ytimg.com/vi/${vidId}/hqdefault.jpg`)\r\n            }\r\n        }\r\n    }\r\n\r\n    if(music.error){\r\n        content = <div className = 'loaderContainer'>\r\n            {music.error}\r\n            {music.data}\r\n            <p>\r\n                if you're getting a 403, it means we've run out of quota\r\n                quotas reset on 3pm PST so come back here after the quota resets\r\n            </p>\r\n        </div>\r\n    }\r\n\r\n    return(\r\n        <main style={{backgroundImage: `url(${bg})`}}>\r\n            <div className = 'container'>\r\n                <div className='musicList'> \r\n                    {content}\r\n                </div>\r\n                <div className = 'searchBar'>\r\n                    <input \r\n                        id = 'searchField' \r\n                        type = 'text' \r\n                        placeholder = {queryString}\r\n                        onClick = {() => {\r\n                                document.getElementById('searchField').addEventListener('keyup', function(event){\r\n                                    if(event.keyCode === 13){\r\n                                        setQueryString(this.value)\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    />\r\n                    <FontAwesomeIcon \r\n                        className = 'searchIcon'\r\n                        icon = {faSearch}\r\n                        onClick = {() => setQueryString(document.getElementById('searchField').value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className = 'nowPlaying'>\r\n                <div className = 'forMarquee'>\r\n                    {bottomPreview}\r\n                </div>\r\n                <div className = 'controller' >\r\n                    <FontAwesomeIcon \r\n                        icon = { faBackward }\r\n                        onClick = {() => sauce ? selectedTrack.key!==0 ? changeMusic(selectedTrack.key-1) : null : null}\r\n                    />\r\n                    <FontAwesomeIcon \r\n                        className = 'playPause'\r\n                        icon = { playIcon }\r\n                        onClick = {() => setPlay( sauce ? !play : play)}\r\n                    />\r\n                    <FontAwesomeIcon \r\n                        icon = { faForward }\r\n                        onClick = {() => sauce ? selectedTrack.key!==maxResults-1 ? changeMusic(selectedTrack.key+1) : null : null}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <ReactPlayer\r\n                className = 'ReactPlayer'\r\n                onStart = {() => setBottomPreview('Now Playing: '+selectedTrack.title)}\r\n                onError = {() => setBottomPreview('something went wrong while fetching the data')}\r\n                onPlay = {() => setPlayICon(faPause)}\r\n                onPause = {() => setPlayICon(faPlay)}\r\n                controls = {true}\r\n                url = {url}\r\n                playing = {play}\r\n                loop = {true}\r\n            />\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Body;","import React from 'react';\nimport './App.css';\n\nimport Body from './components/Body';\n\nfunction App() {\n  return (\n    <div>\n      <Body/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}