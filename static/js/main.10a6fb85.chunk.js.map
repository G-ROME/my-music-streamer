{"version":3,"sources":["components/Body.js","App.js","index.js"],"names":["Body","useState","queryString","setQueryString","apiUrl","process","sauce","setSauce","url","bg","setBg","loading","data","error","music","setMusic","play","setPlay","faPlay","playIcon","setPlayICon","selectedTrack","setSelectedTrack","bottomPreview","setBottomPreview","playList","setPlaylist","useEffect","axios","get","then","response","catch","message","content","className","changeMusic","key","forEach","title","id","checkAndSetBg","vidId","image","Image","src","onload","this","width","map","onLoad","videoId","concat","snippet","document","getElementsByClassName","style","display","onClick","thumbnails","default","alt","backgroundImage","type","placeholder","getElementById","addEventListener","event","keyCode","value","icon","faSearch","faBackward","faForward","maxResults","onStart","onError","onPlay","faPause","onPause","controls","playing","loop","config","youtube","playerVars","height","vq","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.10a6fb85.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faSearch, faPause, faForward, faBackward } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ReactPlayer from 'react-player/youtube';\r\n\r\n\r\nfunction Body() {\r\n    const api = 'https://www.googleapis.com/youtube/v3';\r\n        const maxResults = 12;\r\n        const [queryString, setQueryString] = useState('nightcore');\r\n    const params =\r\n    `/search?part=snippet&maxResults=${maxResults}&order=relevance&q=${queryString}&type=video&videoCategoryId=10&key=`;\r\n    const API_KEY_test01= process.env.REACT_APP_API_KEY_test01;\r\n    const apiUrl = api + params + API_KEY_test01;\r\n\r\n    const [sauce, setSauce] = useState(null);\r\n    let url = `https://www.youtube.com/watch?v=${sauce}`;\r\n\r\n    const [bg, setBg] = useState(null);\r\n\r\n    const [music, setMusic] = useState({loading: false, data: null, error:false});\r\n\r\n    const [play, setPlay] = useState(false);\r\n    const [playIcon, setPlayICon] = useState(faPlay);\r\n\r\n    const [selectedTrack, setSelectedTrack] = useState(null);\r\n\r\n    const [bottomPreview, setBottomPreview] = useState('fetching data');\r\n\r\n    const [playList, setPlaylist] = useState([]);\r\n    \r\n\r\n    useEffect(() => {\r\n        setMusic({\r\n            loading:true,\r\n            data: null,\r\n            error:false\r\n        });\r\n        axios.get(apiUrl)\r\n            .then((response) => {\r\n                setMusic({\r\n                    loading: false,\r\n                    data: response.data['items'],\r\n                    error:false\r\n                });\r\n            })  \r\n            .catch(error =>{\r\n                setMusic({\r\n                    loading: false,\r\n                    data: null,\r\n                    error:error.message\r\n                })\r\n            });\r\n    }, [apiUrl]);\r\n\r\n    let content = \r\n        <div className = 'loaderContainer'>\r\n            <div className='loader'/>\r\n        </div>\r\n\r\n    if(music.data){\r\n        content = \r\n        music.data.map((music, key) => \r\n        <div className=\"channelCard\" \r\n                key = {key}\r\n                onLoad = {() => {\r\n                        if(key === 0 && !sauce){\r\n                            setBottomPreview('select a track');\r\n                            checkAndSetBg(music.id.videoId);\r\n                        }\r\n                        setPlaylist(playList.concat({\r\n                            'key': key,\r\n                            'title': music.snippet.title,\r\n                            'id': music.id.videoId,\r\n                        }))\r\n                        document.getElementsByClassName('channelCard')[key].style.display = 'flex';\r\n                    }\r\n                }\r\n                onClick = {() => {\r\n                    changeMusic(key);\r\n                }\r\n            }\r\n        >\r\n            {/* //TODO --change this part to conserve quota -- update I have no idea how\r\n            //I'll get back to it */}\r\n            <img src={music.snippet.thumbnails.default.url} alt='[img]'></img>\r\n            <p>{music.snippet.title}</p>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    function changeMusic(key){\r\n        playList.forEach(music => {\r\n            if(music.key === key){\r\n                setSelectedTrack({\r\n                    'key':music.key,\r\n                    'title': music.title,\r\n                });\r\n                setBottomPreview(<div className = 'flex'>{'Fetching: ' + music.title }<div className='miniLoader'/></div>);\r\n                setSauce(music.id);\r\n                setPlay(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    function checkAndSetBg(vidId){\r\n        let image = new Image();\r\n        image.src = `https://i.ytimg.com/vi/${vidId}/maxresdefault.jpg`;\r\n        image.onload = function(){\r\n            if(this.width >120){\r\n                setBg(this.src);\r\n            }else{\r\n                setBg(`https://i.ytimg.com/vi/${vidId}/hqdefault.jpg`)\r\n            }\r\n        }\r\n    }\r\n\r\n    if(music.error){\r\n        if(music.error === 'Request failed with status code 403'){\r\n        content = \r\n            <div className = 'loaderContainer'>\r\n                    we've run out of quota,\r\n                    quotas reset on 3:00pm PST so \r\n                    come back here after the quota resets\r\n            </div>\r\n        }else{\r\n        content = \r\n            <div className = 'loaderContainer'>\r\n                {music.error}\r\n            </div>\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <main style={{backgroundImage: `url(${bg})`}}>\r\n            <div className = 'container'>\r\n                <div className='musicList'> \r\n                    {content}\r\n                </div>\r\n                <div className = 'searchBar'>\r\n                    <input \r\n                        id = 'searchField' \r\n                        type = 'text' \r\n                        placeholder = {queryString}\r\n                        onClick = {() => {\r\n                                document.getElementById('searchField').addEventListener('keyup', function(event){\r\n                                    if(event.keyCode === 13){\r\n                                        setQueryString(this.value);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    />\r\n                    <FontAwesomeIcon \r\n                        className = 'searchIcon'\r\n                        icon = {faSearch}\r\n                        onClick = {() => setQueryString(document.getElementById('searchField').value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className = 'nowPlaying'>\r\n                <div className = 'forMarquee'>\r\n                    {bottomPreview}\r\n                </div>\r\n                <div className = 'controller' >\r\n                    <FontAwesomeIcon \r\n                        icon = { faBackward }\r\n                        onClick = {() => sauce ? selectedTrack.key!==0 ? changeMusic(selectedTrack.key-1) : null : null}\r\n                    />\r\n                    <FontAwesomeIcon \r\n                        className = 'playPause'\r\n                        icon = { playIcon }\r\n                        onClick = {() => setPlay( sauce ? !play : play)}\r\n                    />\r\n                    <FontAwesomeIcon \r\n                        icon = { faForward }\r\n                        onClick = {() => sauce ? selectedTrack.key!==maxResults-1 ? changeMusic(selectedTrack.key+1) : null : null}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <ReactPlayer\r\n                className = 'ReactPlayer'\r\n                onStart = {() => {\r\n                    setBottomPreview('Now Playing: '+selectedTrack.title);\r\n                    checkAndSetBg(sauce);\r\n                    }\r\n                }\r\n                onError = {() => setBottomPreview('something went wrong while fetching the data')}\r\n                onPlay = {() => setPlayICon(faPause)}\r\n                onPause = {() => setPlayICon(faPlay)}\r\n                controls = {true}\r\n                url = {url}\r\n                playing = {play}\r\n                loop = {true}\r\n                config = {\r\n                    {\r\n                        youtube: {\r\n                            playerVars: {\r\n                                height : '144px',\r\n                                width: '256px',\r\n                                vq: 'small'\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            />\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Body;","import React from 'react';\nimport './App.css';\n\nimport Body from './components/Body';\n\nfunction App() {\n  return (\n    <div>\n      <Body/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}